[{"C:\\portafolio\\src\\reportWebVitals.js":"1","C:\\portafolio\\src\\App.js":"2","C:\\portafolio\\src\\index.js":"3","C:\\portafolio\\src\\components\\header\\header.js":"4","C:\\portafolio\\src\\vars.js":"5","C:\\portafolio\\src\\pages\\home\\cover\\cover.js":"6","C:\\portafolio\\src\\pages\\home\\home.js":"7","C:\\portafolio\\src\\components\\title\\title.js":"8","C:\\portafolio\\src\\components\\containerviewPort\\containerviewPort.js":"9","C:\\portafolio\\src\\pages\\services\\servicies.js":"10","C:\\portafolio\\src\\pages\\home\\me\\me.js":"11","C:\\portafolio\\src\\components\\containeCapa\\containerCapa.js":"12","C:\\portafolio\\src\\components\\grid\\grid.js":"13","C:\\portafolio\\src\\pages\\home\\skills\\skills.js":"14"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"16"},{"size":2763,"mtime":1610245070306,"results":"17","hashOfConfig":"16"},{"size":255,"mtime":1610154600539,"results":"18","hashOfConfig":"16"},{"size":5836,"mtime":1610158518377,"results":"19","hashOfConfig":"16"},{"size":3654,"mtime":1611525270433,"results":"20","hashOfConfig":"16"},{"size":5158,"mtime":1611524756123,"results":"21","hashOfConfig":"16"},{"size":12816,"mtime":1611525971805,"results":"22","hashOfConfig":"16"},{"size":2124,"mtime":1609874057510,"results":"23","hashOfConfig":"16"},{"size":1199,"mtime":1610231836328,"results":"24","hashOfConfig":"16"},{"size":228,"mtime":1608573602945,"results":"25","hashOfConfig":"16"},{"size":3623,"mtime":1611525215769,"results":"26","hashOfConfig":"16"},{"size":2817,"mtime":1610741193842,"results":"27","hashOfConfig":"16"},{"size":410,"mtime":1612582299683,"results":"28","hashOfConfig":"16"},{"size":1281,"mtime":1612585024730,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"somfob",{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},"C:\\portafolio\\src\\reportWebVitals.js",[],["66","67"],"C:\\portafolio\\src\\App.js",["68"],"import { Component } from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport Header from './components/header/header'\r\nimport Home from './pages/home/home';\r\nimport Services from './pages/services/servicies'\r\nclass App extends Component {  \r\n  constructor(props)\r\n  {\r\n    \r\n    super(props)    \r\n    this.onFocusViewPort = this.onFocusViewPort.bind(this)    \r\n    this.onActionMenu = this.onActionMenu.bind(this)\r\n    this.state = {\r\n      documentInfo : {\r\n        scrollY:0,\r\n        scrollX:0,\r\n        height:0,\r\n        width:0\r\n      },\r\n\r\n      colorIconsHeader : {menu:'black', nav:'black'}\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <section>\r\n        <BrowserRouter>\r\n          <Header documentInfo={this.state.documentInfo} colorMenu={this.state.colorIconsHeader.menu} colorNav={this.state.colorIconsHeader.nav} ></Header>       \r\n          <Switch>            \r\n            \r\n            <Route exact path='/' render={(props)=>(this.getPage('Home', props))}></Route>\r\n            <Route exact path='/home' render={(props)=>(this.getPage('Home', props))}></Route>\r\n            <Route exact path='/services' render={(props)=>(this.getPage('Services', props))}></Route>\r\n          </Switch>\r\n        </BrowserRouter>\r\n        \r\n      </section>      \r\n    );\r\n  }\r\n\r\n  componentDidMount()\r\n  {\r\n    this.setState({\r\n      ...this.state,         \r\n      documentInfo : this.getInformationDocument()             \r\n    })     \r\n    window.addEventListener('scroll', ()=>{            \r\n      this.setState({ \r\n        ...this.state,        \r\n        documentInfo : this.getInformationDocument()                    \r\n        \r\n      })     \r\n    })\r\n\r\n    window.addEventListener('resize', ()=>{            \r\n      this.setState({         \r\n        ...this.state,\r\n        documentInfo : this.getInformationDocument()                            \r\n      })     \r\n    })      \r\n  }\r\n\r\n  getInformationDocument= ()=>{\r\n    return {\r\n        height:window.innerHeight,\r\n        width:window.innerWidth,\r\n        scrollX : window.scrollX,\r\n        scrollY : window.scrollY,        \r\n    }\r\n  }  \r\n\r\n  onFocusViewPort = (e)=>{\r\n    \r\n    this.setState({\r\n      ...this.state,\r\n      colorIconsHeader : {menu:e.colorHeader.menu, nav:e.colorHeader.nav}\r\n    })\r\n  }\r\n\r\n  getPage = (page,props)=>{\r\n    var pageSolicitada;\r\n\r\n    switch (page)\r\n    {\r\n      case 'Home':\r\n        pageSolicitada = <Home {...props} documentInfo={this.state.documentInfo}  onFocusViewPort={this.onFocusViewPort}  ></Home>\r\n        break;\r\n      case 'Services':\r\n        pageSolicitada = <Services {...props}  ></Services>\r\n        break;\r\n    }\r\n\r\n    return pageSolicitada\r\n\r\n  }\r\n\r\n  onActionMenu = (e)=>{\r\n\r\n  }\r\n\r\n  \r\n}\r\n \r\nexport default App;\r\n","C:\\portafolio\\src\\index.js",[],["69","70"],"C:\\portafolio\\src\\components\\header\\header.js",["71","72"],"import React,{Component, useEffect } from 'react';\r\nimport {Vars} from './../../vars'\r\nimport './header.css' \r\nimport {ReactComponent as LogoHeader} from './../../img/portada/logoHeader.svg'\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class Header extends Component {  \r\n \r\n tag = 'BsArrowDownShort'\r\n constructor(props) {\r\n    super(props);\r\n    this.menuButtonTop = React.createRef();\r\n    this.header = React.createRef();\r\n    \r\n    this.state = {\r\n      menu: {\r\n        gradosMenu : 'rotateY(90)',\r\n        open: false,\r\n        gradosButtonMenuTop : 'rotateZ(0)',\r\n        gradosButtonMenuBottom : 'rotateZ(0)',\r\n        positionButtonMenuTop : '0px' ,\r\n        colorIcons: {menu:'var(--color-secondary)', nav:'var(--color-secondary)'}      \r\n      },\r\n      documentInfo : this.props.documentInfo,\r\n      itemsMenu : Vars.Menu\r\n    }\r\n        \r\n  }\r\n\r\n    \r\n  componentDidMount()\r\n  {\r\n    \r\n    window.matchMedia('(max-width: 1320px)').addEventListener('change',(e)=>{\r\n      if(e.matches)\r\n      {\r\n        \r\n        this.menuButtonTop.current.style.top = '20px'\r\n      }\r\n    })\r\n\r\n    window.matchMedia('(min-width: 1320px)').addEventListener('change', (e)=>{\r\n      if(e.matches)\r\n      {\r\n        \r\n        this.menuButtonTop.current.style.top = '50px'\r\n      }\r\n    })\r\n    \r\n  }\r\n\r\n  \r\n  componentDidUpdate = (newprop)=>\r\n  {               \r\n     if(newprop.documentInfo !== this.props.documentInfo)\r\n     {\r\n        if(this.state.menu.open) \r\n        {\r\n          this.closeMenu();\r\n        }\r\n     }\r\n     \r\n     if(newprop.colorMenu !== this.props.colorMenu || newprop.colorNav !== this.props.colorNav)          \r\n     {\r\n       \r\n       this.setState(\r\n         {\r\n          ...this.state,\r\n          menu: {...this.state.menu, colorIcons: {menu:this.props.colorMenu, nav:this.props.colorNav}}          \r\n         }\r\n       )\r\n       \r\n     }\r\n  }\r\n  \r\n  render() {\r\n\r\n    return (\r\n      <div>          \r\n          <header ref={this.header} >              \r\n              <Link to='/home' onClick={()=>{this.onMovePath('/home')}}><LogoHeader  id='logoHeader' fill={this.state.menu.colorIcons.nav} stroke={this.state.menu.colorIcons.nav} ></LogoHeader></Link>\r\n              \r\n              <section id=\"navBar\" className=\"container row\">\r\n                <ul id=\"nav\" className=\"container row\"  style={{transform: this.state.menu.gradosMenu}}>                \r\n                  {\r\n                    this.state.itemsMenu.map((obje)=>{                    \r\n                    return (<Link to={obje.path}  key={obje.id} className='items'   >\r\n                          <li onClick={()=>{this.onMovePath(obje.path)}} >   <a>{obje.icon}</a> {obje.name}</li>\r\n                       </Link>)                                                                                                            \r\n                    })                                                              \r\n                  }                                          \r\n                </ul>\r\n                <div id=\"logoMenu\" onClick={this.actionMenu}>\r\n                  <p ref={this.menuButtonTop} id='logoTop' style={{transform : this.state.menu.gradosButtonMenuTop, borderColor:this.state.menu.colorIcons.menu, backgroundColor:this.state.menu.colorIcons.menu}}></p>\r\n                  <p id='logoBottom'style={{transform : this.state.menu.gradosButtonMenuBottom, borderColor:this.state.menu.colorIcons.menu, backgroundColor:this.state.menu.colorIcons.menu }}></p>\r\n                </div>\r\n              </section>                            \r\n          </header>                  \r\n      </div>              \r\n    );\r\n  }\r\n\r\n\r\n  \r\n  actionMenu = ()=>{    \r\n    if (!this.state.menu.open)\r\n    {\r\n      \r\n      this.openMenu()  \r\n    }else{\r\n       this.closeMenu()     \r\n    }  \r\n\r\n  }\r\n\r\n  openMenu = ()=>{\r\n    let top = '0px';\r\n    let colorMenu = 'var(--color-secondary)';\r\n    if(window.matchMedia('(max-width: 1320px)').matches)\r\n    {\r\n      top = '30px';\r\n      \r\n    }else{\r\n      if(window.matchMedia('(min-width: 1320px)').matches)\r\n      {\r\n        colorMenu = this.state.menu.colorIcons.menu\r\n        top = '60px';\r\n      }\r\n    }\r\n    this.setState({\r\n      menu : {\r\n        ...this.state.menu,\r\n        gradosMenu: 'rotateY(0deg)',\r\n        open : true,\r\n        gradosButtonMenuTop: 'rotateZ(405deg)',\r\n        gradosButtonMenuBottom: 'rotateZ(-405deg)'        ,\r\n        positionButtonMenuTop: top,\r\n        colorIcons :{...this.state.menu.colorIcons, menu:colorMenu}\r\n        \r\n      }        \r\n    }, ()=> {\r\n      \r\n      this.menuButtonTop.current.style.top = this.state.menu.positionButtonMenuTop\r\n      this.changeZIndexHeader('2')\r\n    })      \r\n  }\r\n\r\n  closeMenu = ()=>{\r\n    \r\n    let top = '0px';\r\n    if(window.matchMedia('(max-width: 1320px)').matches)\r\n    {\r\n      top = '20px';\r\n    }else{\r\n      if(window.matchMedia('(min-width: 1320px)').matches)\r\n      {\r\n        top = '50px';\r\n      }\r\n    }\r\n    this.setState({\r\n      menu : {\r\n        ...this.state.menu,\r\n        gradosMenu: 'rotateY(90deg)',\r\n        open : false,\r\n        gradosButtonMenuTop: 'rotateZ(0deg)',\r\n        gradosButtonMenuBottom: 'rotateZ(0deg)',\r\n        positionButtonMenuTop: top,\r\n        colorIcons :{...this.state.menu.colorIcons, menu:this.props.colorMenu}        \r\n        }        \r\n      }, ()=> {\r\n        this.menuButtonTop.current.style.top = this.state.menu.positionButtonMenuTop                      \r\n        this.changeZIndexHeader('1')\r\n      })      \r\n  }\r\n\r\n  onMovePath = (e)=>{\r\n    this.closeMenu()\r\n    window.scroll({\r\n      top:0,\r\n      left:0,\r\n      behavior:'smooth'\r\n    })    \r\n  }\r\n\r\n  changeZIndexHeader = (index)=>{\r\n    if(window.matchMedia('(max-width: 538px)').matches)\r\n    {\r\n      this.header.current.style.zIndex = index\r\n    }\r\n    \r\n  }\r\n  \r\n\r\n  \r\n  \r\n}\r\n \r\n \r\n","C:\\portafolio\\src\\vars.js",[],"C:\\portafolio\\src\\pages\\home\\cover\\cover.js",[],"C:\\portafolio\\src\\pages\\home\\home.js",["73","74"],"C:\\portafolio\\src\\components\\title\\title.js",[],"C:\\portafolio\\src\\components\\containerviewPort\\containerviewPort.js",[],"C:\\portafolio\\src\\pages\\services\\servicies.js",["75"],"import {Component} from 'react'\r\n\r\nexport default class Services extends Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props)\r\n    }\r\n\r\n    render()\r\n    {\r\n        return (<> \r\n            \r\n        </>);\r\n    }\r\n}","C:\\portafolio\\src\\pages\\home\\me\\me.js",["76"],"import React, {Component} from 'react'\r\nimport ContainerCapa from '../../../components/containeCapa/containerCapa';\r\nimport ContainerViewPort from '../../../components/containerviewPort/containerviewPort';\r\nimport imageMe from './../../../img/aboutMe.jpg'\r\nimport  './me.css';\r\nimport Vars from './../../../vars'\r\nexport default class Me extends Component\r\n{\r\n    changeCaps = false;\r\n    constructor(props)\r\n    {\r\n        super(props)\r\n        this.state = {capa:[\r\n            {id:1, type:'description', show:false},\r\n            {id:2, type:'imageMe', show:false}                        \r\n        ]}\r\n        this.onFocusViewPort = this.onFocusViewPort.bind(this)        \r\n    }\r\n\r\n    render()\r\n    {\r\n        return (\r\n            <>\r\n                <ContainerViewPort type={'me'}  documentInfo={this.props.documentInfo} onFocusViewPort={this.onFocusViewPort} >\r\n                    <section id=\"me\" className=\"container row\" >\r\n                        <div className=\"child\"></div>\r\n                        <ContainerCapa image={imageMe} className=\"child\" id=\"imagenIlustra\" colorCap=\"var(--color-secondary)\" show={this.state.capa.find(x=>x.id===2).show}></ContainerCapa>    \r\n                        <ContainerCapa id=\"description\" className=\"container column center\" background=\"var(--color-primary)\" colorCap=\"var(--color-secondary)\" show={this.state.capa.find(x=>x.id===1).show}  >\r\n                            <h2> {Vars.Paragraphs.home.me.tile} </h2>\r\n                            <p> \r\n                                {Vars.Paragraphs.home.me.body}\r\n                                <br></br>\r\n                                <br></br>\r\n                                <span id=\"cita\">\r\n                                    {Vars.Paragraphs.home.me.footer.cita}\r\n                                    <br></br>\r\n                                    <span id=\"autor\" >- {Vars.Paragraphs.home.me.footer.autor}</span>\r\n                                </span>\r\n                                <br></br>         \r\n                                <div className=\"container row center\" id=\"buttons\">\r\n                                    <button className=\"button offline \">Checkout my Skills</button>\r\n                                    <button className=\"button outline \">Or maybe my Porfafolio</button>                                                        \r\n                                </div>                                                       \r\n                            </p>                            \r\n                        </ContainerCapa>                                                                                                                                \r\n                    </section>\r\n                </ContainerViewPort>\r\n                \r\n            </>\r\n        );\r\n    }\r\n    onFocusViewPort = (e)=>{\r\n        if(e.type === 'me' && e.match)\r\n        {\r\n            if(!this.changeCaps)\r\n            {\r\n                let maps = this.state.capa;\r\n                maps.map(x=>{\r\n                    x.show = true;\r\n                })\r\n                console.log(maps)\r\n                this.setState({capa:maps}, ()=>this.changeCaps = true)\r\n            }\r\n            \r\n            if(window.matchMedia('(max-width: 992px)').matches)\r\n            {\r\n                this.props.onFocusViewPort({colorHeader:{menu:'var(--color-secondary)', nav:'var(--color-secondary)'}, type:e.type})\r\n            }else{\r\n                this.props.onFocusViewPort({colorHeader:{menu:'white', nav:'var(--color-secondary)'}, type:e.type})\r\n            }\r\n            \r\n        }        \r\n    }\r\n\r\n}","C:\\portafolio\\src\\components\\containeCapa\\containerCapa.js",[],"C:\\portafolio\\src\\components\\grid\\grid.js",["77","78"],"import React, {Component, useEffect, useState} from 'react'\r\nimport './grid.css'\r\n\r\nlet Grid = (props)=>{\r\n    \r\n    \r\n\r\n    //constructor\r\n    useEffect(()=>{\r\n        \r\n    })\r\n\r\n    //didmount\r\n    useEffect(()=>{\r\n    \r\n    }, [])\r\n\r\n    return (<>\r\n        <section id={props.type} className=\"grid\">            \r\n                {props.children}\r\n        </section>\r\n    </>);\r\n\r\n}\r\n\r\nexport default Grid;","C:\\portafolio\\src\\pages\\home\\skills\\skills.js",["79","80"],"import React, { useEffect, useState} from 'react'\r\nimport './skills.css'\r\nimport Grid from './../../../components/grid/grid'\r\nimport Vars from './../../../vars'\r\n\r\nlet Skills = (props)=>{\r\n    \r\n    let [state, setState] = useState({});\r\n    //constructor\r\n    useEffect(()=>{\r\n        \r\n    })\r\n\r\n    //didmount\r\n    useEffect(()=>{\r\n        \r\n    }, [])\r\n\r\n    //didupdate\r\n    \r\n\r\n    \r\n    return (<>\r\n        <h2>I Can Help U With This ...</h2>\r\n        <Grid type=\"grid-5-1\">\r\n            {\r\n                Vars.Paragraphs.home.skills[0].items.map(x=>{\r\n                    return (\r\n                        <div key={x.id}></div>\r\n                    );\r\n                })\r\n            }\r\n        </Grid>\r\n        <Grid type=\"grid-5-2\">\r\n            {\r\n                Vars.Paragraphs.home.skills[0].items.map(x=>{\r\n                    return (\r\n                        <div key={x.id}></div>\r\n                    );\r\n                })\r\n            }\r\n        </Grid>\r\n        <Grid type=\"grid-5-3\">\r\n            {\r\n                Vars.Paragraphs.home.skills[0].items.map(x=>{\r\n                    return (\r\n                        <div key={x.id}></div>\r\n                    );\r\n                })\r\n            }\r\n        </Grid>\r\n    </>);\r\n}\r\n\r\nexport default Skills;",{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":83,"column":5,"nodeType":"87","messageId":"88","endLine":91,"endColumn":6},{"ruleId":"81","replacedBy":"89"},{"ruleId":"83","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":1,"column":26,"nodeType":"93","messageId":"94","endLine":1,"endColumn":35},{"ruleId":"95","severity":1,"message":"96","line":88,"column":78,"nodeType":"97","endLine":88,"endColumn":81},{"ruleId":"91","severity":1,"message":"98","line":5,"column":8,"nodeType":"93","messageId":"94","endLine":5,"endColumn":13},{"ruleId":"91","severity":1,"message":"99","line":6,"column":8,"nodeType":"93","messageId":"94","endLine":6,"endColumn":18},{"ruleId":"100","severity":1,"message":"101","line":5,"column":5,"nodeType":"102","messageId":"103","endLine":8,"endColumn":6},{"ruleId":"104","severity":1,"message":"105","line":58,"column":27,"nodeType":"106","messageId":"107","endLine":58,"endColumn":29},{"ruleId":"91","severity":1,"message":"108","line":1,"column":16,"nodeType":"93","messageId":"94","endLine":1,"endColumn":25},{"ruleId":"91","severity":1,"message":"109","line":1,"column":38,"nodeType":"93","messageId":"94","endLine":1,"endColumn":46},{"ruleId":"91","severity":1,"message":"110","line":8,"column":10,"nodeType":"93","messageId":"94","endLine":8,"endColumn":15},{"ruleId":"91","severity":1,"message":"111","line":8,"column":17,"nodeType":"93","messageId":"94","endLine":8,"endColumn":25},"no-native-reassign",["112"],"no-negated-in-lhs",["113"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase",["112"],["113"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Title' is defined but never used.","'imageAbout' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Component' is defined but never used.","'useState' is defined but never used.","'state' is assigned a value but never used.","'setState' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]