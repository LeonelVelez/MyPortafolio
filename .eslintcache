[{"C:\\portafolio\\src\\reportWebVitals.js":"1","C:\\portafolio\\src\\App.js":"2","C:\\portafolio\\src\\index.js":"3","C:\\portafolio\\src\\components\\header\\header.js":"4","C:\\portafolio\\src\\vars.js":"5","C:\\portafolio\\src\\pages\\home\\cover\\cover.js":"6","C:\\portafolio\\src\\pages\\home\\home.js":"7","C:\\portafolio\\src\\components\\title\\title.js":"8","C:\\portafolio\\src\\components\\containerviewPort\\containerviewPort.js":"9","C:\\portafolio\\src\\pages\\services\\servicies.js":"10","C:\\portafolio\\src\\pages\\home\\me\\me.js":"11"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"13"},{"size":2669,"mtime":1609190893741,"results":"14","hashOfConfig":"13"},{"size":255,"mtime":1607030802315,"results":"15","hashOfConfig":"13"},{"size":5502,"mtime":1609874079046,"results":"16","hashOfConfig":"13"},{"size":1916,"mtime":1609190455233,"results":"17","hashOfConfig":"13"},{"size":3404,"mtime":1609874117370,"results":"18","hashOfConfig":"13"},{"size":12905,"mtime":1609874105781,"results":"19","hashOfConfig":"13"},{"size":2124,"mtime":1609874057510,"results":"20","hashOfConfig":"13"},{"size":894,"mtime":1609817083696,"results":"21","hashOfConfig":"13"},{"size":228,"mtime":1608573602945,"results":"22","hashOfConfig":"13"},{"size":2030,"mtime":1609873676776,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"somfob",{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\portafolio\\src\\reportWebVitals.js",[],["52","53"],"C:\\portafolio\\src\\App.js",["54"],"import { Component } from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport Header from './components/header/header'\r\nimport Home from './pages/home/home';\r\nimport Services from './pages/services/servicies'\r\nclass App extends Component {  \r\n  constructor(props)\r\n  {\r\n    \r\n    super(props)    \r\n    this.onFocusViewPort = this.onFocusViewPort.bind(this)    \r\n    this.state = {\r\n      documentInfo : {\r\n        scrollY:0,\r\n        scrollX:0,\r\n        height:0,\r\n        width:0\r\n      },\r\n\r\n      colorIconsHeader : {menu:'black', nav:'black'}\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <section>\r\n        <BrowserRouter>\r\n          <Header documentInfo={this.state.documentInfo} colorMenu={this.state.colorIconsHeader.menu} colorNav={this.state.colorIconsHeader.nav} ></Header>       \r\n          <Switch>            \r\n            \r\n            <Route exact path='/' render={(props)=>(this.getPage('Home', props))}></Route>\r\n            <Route exact path='/home' render={(props)=>(this.getPage('Home', props))}></Route>\r\n            <Route exact path='/services' render={(props)=>(this.getPage('Services', props))}></Route>\r\n          </Switch>\r\n        </BrowserRouter>\r\n        \r\n      </section>      \r\n    );\r\n  }\r\n\r\n  componentDidMount()\r\n  {\r\n    this.setState({\r\n      ...this.state,         \r\n      documentInfo : this.getInformationDocument()             \r\n    })     \r\n    window.addEventListener('scroll', ()=>{            \r\n      this.setState({ \r\n        ...this.state,        \r\n        documentInfo : this.getInformationDocument()                    \r\n        \r\n      })     \r\n    })\r\n\r\n    window.addEventListener('resize', ()=>{            \r\n      this.setState({         \r\n        ...this.state,\r\n        documentInfo : this.getInformationDocument()                            \r\n      })     \r\n    })      \r\n  }\r\n\r\n  getInformationDocument= ()=>{\r\n    return {\r\n        height:window.innerHeight,\r\n        width:window.innerWidth,\r\n        scrollX : window.scrollX,\r\n        scrollY : window.scrollY,        \r\n    }\r\n  }  \r\n\r\n  onFocusViewPort = (e)=>{\r\n    this.setState({\r\n      ...this.state,\r\n      colorIconsHeader : {menu:e.colorHeader.menu, nav:e.colorHeader.nav}\r\n    })\r\n  }\r\n\r\n  getPage = (page,props)=>{\r\n    var pageSolicitada;\r\n\r\n    switch (page)\r\n    {\r\n      case 'Home':\r\n        pageSolicitada = <Home {...props} documentInfo={this.state.documentInfo}  onFocusViewPort={this.onFocusViewPort}  ></Home>\r\n        break;\r\n      case 'Services':\r\n        pageSolicitada = <Services {...props}  ></Services>\r\n        break;\r\n    }\r\n\r\n    return pageSolicitada\r\n\r\n  }\r\n\r\n  \r\n}\r\n \r\nexport default App;\r\n","C:\\portafolio\\src\\index.js",[],["55","56"],"C:\\portafolio\\src\\components\\header\\header.js",["57","58"],"import React,{Component, useEffect } from 'react';\r\nimport {Vars} from './../../vars'\r\nimport './header.css' \r\nimport {ReactComponent as LogoHeader} from './../../img/portada/logoHeader.svg'\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class Header extends Component {  \r\n \r\n tag = 'BsArrowDownShort'\r\n constructor(props) {\r\n    super(props);\r\n    this.menuButtonTop = React.createRef();\r\n    \r\n    \r\n    this.state = {\r\n      menu: {\r\n        gradosMenu : 'rotateY(90)',\r\n        open: false,\r\n        gradosButtonMenuTop : 'rotateZ(0)',\r\n        gradosButtonMenuBottom : 'rotateZ(0)',\r\n        positionButtonMenuTop : '0px' ,\r\n        colorIcons: {menu:'black', nav:'black'}      \r\n      },\r\n      documentInfo : this.props.documentInfo,\r\n      itemsMenu : Vars.Menu\r\n    }\r\n        \r\n  }\r\n\r\n    \r\n  componentDidMount()\r\n  {\r\n    \r\n    window.matchMedia('(max-width: 1320px)').addEventListener('change',(e)=>{\r\n      if(e.matches)\r\n      {\r\n        \r\n        this.menuButtonTop.current.style.top = '20px'\r\n      }\r\n    })\r\n\r\n    window.matchMedia('(min-width: 1320px)').addEventListener('change', (e)=>{\r\n      if(e.matches)\r\n      {\r\n        \r\n        this.menuButtonTop.current.style.top = '50px'\r\n      }\r\n    })\r\n    \r\n  }\r\n\r\n  \r\n  componentDidUpdate = (newprop)=>\r\n  {               \r\n     if(newprop.documentInfo !== this.props.documentInfo)\r\n     {\r\n        if(this.state.menu.open) \r\n        {\r\n          this.closeMenu();\r\n        }\r\n     }\r\n     \r\n     if(newprop.colorMenu !== this.props.colorMenu || newprop.colorNav !== this.props.colorNav)          \r\n     {\r\n       \r\n       this.setState(\r\n         {\r\n          ...this.state,\r\n          menu: {...this.state.menu, colorIcons: {menu:this.props.colorMenu, nav:this.props.colorNav}}          \r\n         }\r\n       )\r\n       \r\n     }\r\n  }\r\n  \r\n  render() {\r\n\r\n    return (\r\n      <div>          \r\n          <header >              \r\n              <Link to='/home' onClick={()=>{this.onMovePath('/home')}}><LogoHeader  id='logoHeader' fill={this.state.menu.colorIcons.nav} stroke={this.state.menu.colorIcons.nav} ></LogoHeader></Link>\r\n              \r\n              <section id=\"navBar\" className=\"container row\">\r\n                <ul id=\"nav\" className=\"container row\"  style={{transform: this.state.menu.gradosMenu}}>                \r\n                  {\r\n                    this.state.itemsMenu.map((obje)=>{                    \r\n                    return (<Link to={obje.path}  key={obje.id} className='items'   >\r\n                          <li onClick={()=>{this.onMovePath(obje.path)}} >   <a>{obje.icon}</a> {obje.name}</li>\r\n                       </Link>)                                                                                                            \r\n                    })                                                              \r\n                  }                                          \r\n                </ul>\r\n                <div id=\"logoMenu\" onClick={this.actionMenu}>\r\n                  <p ref={this.menuButtonTop} id='logoTop' style={{transform : this.state.menu.gradosButtonMenuTop, borderColor:this.state.menu.colorIcons.menu, backgroundColor:this.state.menu.colorIcons.menu}}></p>\r\n                  <p id='logoBottom'style={{transform : this.state.menu.gradosButtonMenuBottom, borderColor:this.state.menu.colorIcons.menu, backgroundColor:this.state.menu.colorIcons.menu }}></p>\r\n                </div>\r\n              </section>                            \r\n          </header>                  \r\n      </div>              \r\n    );\r\n  }\r\n\r\n\r\n  \r\n  actionMenu = ()=>{    \r\n    if (!this.state.menu.open)\r\n    {\r\n      \r\n      this.openMenu()  \r\n    }else{\r\n       this.closeMenu()     \r\n    }  \r\n\r\n  }\r\n\r\n  openMenu = ()=>{\r\n    let top = '0px';\r\n    let colorMenu = 'black';\r\n    if(window.matchMedia('(max-width: 1320px)').matches)\r\n    {\r\n      top = '30px';\r\n      \r\n    }else{\r\n      if(window.matchMedia('(min-width: 1320px)').matches)\r\n      {\r\n        colorMenu = this.state.menu.colorIcons.menu\r\n        top = '60px';\r\n      }\r\n    }\r\n    this.setState({\r\n      menu : {\r\n        ...this.state.menu,\r\n        gradosMenu: 'rotateY(0deg)',\r\n        open : true,\r\n        gradosButtonMenuTop: 'rotateZ(405deg)',\r\n        gradosButtonMenuBottom: 'rotateZ(-405deg)'        ,\r\n        positionButtonMenuTop: top,\r\n        colorIcons :{...this.state.menu.colorIcons, menu:colorMenu}\r\n        \r\n      }        \r\n    }, ()=> {\r\n      \r\n      this.menuButtonTop.current.style.top = this.state.menu.positionButtonMenuTop\r\n      \r\n    })      \r\n  }\r\n\r\n  closeMenu = ()=>{\r\n    \r\n    let top = '0px';\r\n    if(window.matchMedia('(max-width: 1320px)').matches)\r\n    {\r\n      top = '20px';\r\n    }else{\r\n      if(window.matchMedia('(min-width: 1320px)').matches)\r\n      {\r\n        top = '50px';\r\n      }\r\n    }\r\n    this.setState({\r\n      menu : {\r\n        ...this.state.menu,\r\n        gradosMenu: 'rotateY(90deg)',\r\n        open : false,\r\n        gradosButtonMenuTop: 'rotateZ(0deg)',\r\n        gradosButtonMenuBottom: 'rotateZ(0deg)',\r\n        positionButtonMenuTop: top,\r\n        colorIcons :{...this.state.menu.colorIcons, menu:this.props.colorMenu}        \r\n        }        \r\n      }, ()=> {\r\n        this.menuButtonTop.current.style.top = this.state.menu.positionButtonMenuTop                      \r\n      })      \r\n  }\r\n\r\n  onMovePath = (e)=>{\r\n    this.closeMenu()\r\n    window.scroll({\r\n      top:0,\r\n      left:0,\r\n      behavior:'smooth'\r\n    })    \r\n  }\r\n  \r\n\r\n  \r\n  \r\n}\r\n \r\n \r\n","C:\\portafolio\\src\\vars.js",["59"],"import React from 'react'\r\nimport { BsHouse, BsPerson,BsFolder,BsPlay,BsLayoutTextWindowReverse } from \"react-icons/bs\";\r\nlet Names =  {\r\n    firtsName: 'Leonel',\r\n    secondName: 'Vélez'\r\n}\r\nlet Vars = {\r\n    Menu : [{\r\n        id: 1,\r\n        name : 'Home',\r\n        path: '/home',\r\n        \r\n        subMenu:[],\r\n        icon: <BsHouse size='30px' color='black' ></BsHouse>        \r\n    },    \r\n    {\r\n        id: 3,\r\n        name : 'Proyects',\r\n        path: '/proyects',        \r\n        subMenu:[] ,\r\n        icon: <BsFolder size='30px' color='black' ></BsFolder>        \r\n    },\r\n    {\r\n        id: 4,\r\n        name : 'U Need This',\r\n        path: '/services',        \r\n        subMenu:[\r\n            {\r\n                id: 1,\r\n                name : 'Development Web',\r\n                path: '',\r\n            },\r\n            {\r\n                id: 2,\r\n                name : 'Development Movil',\r\n                path: '',\r\n            },\r\n            {\r\n                id: 3,\r\n                name : 'Backend',\r\n                path: '',\r\n            },\r\n            {\r\n                id: 4,\r\n                name : 'SEO',\r\n                path: '',\r\n            },\r\n            {\r\n                id: 5,\r\n                name : 'App Publication And admin',\r\n                path: '',\r\n            },\r\n            {\r\n                id: 6,\r\n                name : 'Web Site Admin',\r\n                path: '',\r\n            },\r\n        ] ,\r\n        icon: <BsPlay size='30px' color='black' ></BsPlay>  \r\n    },\r\n    {\r\n        id: 5,\r\n        name : 'My Cv',\r\n        path: 'cv',\r\n        subMenu:[] ,\r\n        icon: <BsLayoutTextWindowReverse size='30px' color='black' ></BsLayoutTextWindowReverse>        \r\n    },\r\n],\r\n    \r\nParagraphHome:{\r\n    title: `Hi, my name is ${Names.firtsName}. I'm Software Developer, Back, Front, Philanthropist & Playboy`\r\n}\r\n}\r\nexport default Vars;\r\nexport {Names, Vars} ;\r\n","C:\\portafolio\\src\\pages\\home\\cover\\cover.js",[],"C:\\portafolio\\src\\pages\\home\\home.js",[],"C:\\portafolio\\src\\components\\title\\title.js",[],"C:\\portafolio\\src\\components\\containerviewPort\\containerviewPort.js",["60"],"import React, {Component} from 'react'\r\n\r\n    class ContainerViewPort extends Component\r\n    {\r\n        constructor(props)\r\n        {\r\n            super(props)                \r\n        }\r\n        render()\r\n        {            \r\n            return (\r\n                <></>\r\n             );         \r\n        }           \r\n        componentDidUpdate(newprops)\r\n        {                        \r\n            if(newprops.documentInfo !== this.props.documentInfo)       \r\n            {\r\n                console.log(\"cambio\")\r\n                if(this.props.references.current.getBoundingClientRect().top <= 0 && this.props.references.current.getBoundingClientRect().bottom >= 0)\r\n                {\r\n                    this.props.onFocusViewPort({type:this.props.type});                        \r\n                }\r\n            }            \r\n        }\r\n    }    \r\n\r\nexport default ContainerViewPort","C:\\portafolio\\src\\pages\\services\\servicies.js",["61"],"C:\\portafolio\\src\\pages\\home\\me\\me.js",[],{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":81,"column":5,"nodeType":"68","messageId":"69","endLine":89,"endColumn":6},{"ruleId":"62","replacedBy":"70"},{"ruleId":"64","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":1,"column":26,"nodeType":"74","messageId":"75","endLine":1,"endColumn":35},{"ruleId":"76","severity":1,"message":"77","line":88,"column":78,"nodeType":"78","endLine":88,"endColumn":81},{"ruleId":"72","severity":1,"message":"79","line":2,"column":19,"nodeType":"74","messageId":"75","endLine":2,"endColumn":27},{"ruleId":"80","severity":1,"message":"81","line":5,"column":9,"nodeType":"82","messageId":"83","endLine":8,"endColumn":10},{"ruleId":"80","severity":1,"message":"81","line":5,"column":5,"nodeType":"82","messageId":"83","endLine":8,"endColumn":6},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase",["84"],["85"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'BsPerson' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-global-assign","no-unsafe-negation"]