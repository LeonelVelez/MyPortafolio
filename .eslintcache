[{"C:\\portafolio\\src\\reportWebVitals.js":"1","C:\\portafolio\\src\\App.js":"2","C:\\portafolio\\src\\index.js":"3","C:\\portafolio\\src\\components\\header\\header.js":"4","C:\\portafolio\\src\\vars.js":"5","C:\\portafolio\\src\\pages\\home\\cover\\cover.js":"6"},{"size":362,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":329,"mtime":1607033113285,"results":"9","hashOfConfig":"8"},{"size":255,"mtime":1607030802315,"results":"10","hashOfConfig":"8"},{"size":4254,"mtime":1607541249481,"results":"11","hashOfConfig":"8"},{"size":2045,"mtime":1607190430971,"results":"12","hashOfConfig":"8"},{"size":1095,"mtime":1607185719384,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"somfob",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\portafolio\\src\\reportWebVitals.js",[],"C:\\portafolio\\src\\App.js",[],"C:\\portafolio\\src\\index.js",[],"C:\\portafolio\\src\\components\\header\\header.js",["27","28","29"],"import React,{Component, useEffect } from 'react';\r\nimport {Vars} from './../../vars'\r\nimport './header.css' \r\nimport LogoHeader from './../../img/portada/logoHeader.svg'\r\n\r\nexport default class Header extends Component {  \r\n menu =[];\r\n tag = 'BsArrowDownShort'\r\n constructor(props) {\r\n    super(props);\r\n    this.menuButtonTop = React.createRef();\r\n    this.menu =  Vars.Menu;\r\n    this.state = {\r\n      Menu: {\r\n        gradosMenu : 'rotateY(90)',\r\n        open: false,\r\n        gradosButtonMenuTop : 'rotateZ(0)',\r\n        gradosButtonMenuBottom : 'rotateZ(0)',\r\n        positionButtonMenuTop : '0px'        \r\n      }\r\n    }\r\n    \r\n  }\r\n\r\n  OnRizable = ()=>{\r\n    if (this.state.Menu.open)\r\n    {\r\n      this.CloseMenu();\r\n    }\r\n    \r\n  }\r\n\r\n  OnScroll = ()=>{\r\n    if (this.state.Menu.open)\r\n    {\r\n      this.CloseMenu();\r\n    }\r\n  }\r\n  \r\n  componentDidMount()\r\n  {\r\n    window.addEventListener('resize', this.OnRizable);\r\n    window.addEventListener('scroll', this.OnScroll)\r\n    window.matchMedia('(max-width: 1200px)').addEventListener('change',(e)=>{\r\n      if(e.matches)\r\n      {\r\n        \r\n        this.menuButtonTop.current.style.top = '20px'\r\n      }\r\n    })\r\n\r\n    window.matchMedia('(min-width: 1200px)').addEventListener('change', (e)=>{\r\n      if(e.matches)\r\n      {\r\n        console.log(this.state)\r\n        this.menuButtonTop.current.style.top = '50px'\r\n      }\r\n    })\r\n    \r\n  }\r\n\r\n  componentWillUnmount()\r\n  {\r\n    window.removeEventListener('resize', this.OnRizable)\r\n    window.removeEventListener('scroll', this.OnScroll)\r\n  }\r\n  render() {\r\n\r\n    return (\r\n      <div>          \r\n          <header>              \r\n              <img id=\"logoHeader\"  src={LogoHeader} alt=\"logo of Leonel Velez\" ></img>              \r\n              <section id=\"navBar\" className=\"container row\">\r\n                <ul id=\"nav\" className=\"container row\"  style={{transform: this.state.Menu.gradosMenu}}>                \r\n                  {\r\n                    this.menu.map((obje)=>{\r\n                    const tagaux = this.tag;\r\n                    return <li key={obje.id}> <a>{obje.icon}</a> {obje.name}</li>                   \r\n                                                                                          \r\n                    })                                                              \r\n                  }                                          \r\n                </ul>\r\n                <div id=\"logoMenu\" onClick={this.onNav}>\r\n                  <p ref={this.menuButtonTop} id='logoTop' style={{transform : this.state.Menu.gradosButtonMenuTop}}></p>\r\n                  <p id='logoBottom'style={{transform : this.state.Menu.gradosButtonMenuBottom }}></p>\r\n                </div>\r\n              </section>                            \r\n          </header>                  \r\n      </div>              \r\n    );\r\n  }\r\n\r\n\r\n  \r\n  onNav = ()=>{    \r\n    if (!this.state.Menu.open)\r\n    {\r\n      this.OpenMenu()  \r\n    }else{\r\n       this.CloseMenu()     \r\n    }  \r\n\r\n  }\r\n\r\n  OpenMenu = ()=>{\r\n    let top = '0px';\r\n    if(window.matchMedia('(max-width: 1200px)').matches)\r\n    {\r\n      top = '30px';\r\n    }else{\r\n      if(window.matchMedia('(min-width: 1200px)').matches)\r\n      {\r\n        top = '60px';\r\n      }\r\n    }\r\n    this.setState({\r\n      Menu : {\r\n        gradosMenu: 'rotateY(0deg)',\r\n        open : true,\r\n        gradosButtonMenuTop: 'rotateZ(405deg)',\r\n        gradosButtonMenuBottom: 'rotateZ(-405deg)'        ,\r\n        positionButtonMenuTop: top\r\n      }        \r\n    }, ()=> this.menuButtonTop.current.style.top = this.state.Menu.positionButtonMenuTop)      \r\n  }\r\n\r\n  CloseMenu = ()=>{\r\n    \r\n    let top = '0px';\r\n    if(window.matchMedia('(max-width: 1200px)').matches)\r\n    {\r\n      top = '20px';\r\n    }else{\r\n      if(window.matchMedia('(min-width: 1200px)').matches)\r\n      {\r\n        top = '50px';\r\n      }\r\n    }\r\n    this.setState({\r\n      Menu : {\r\n        gradosMenu: 'rotateY(90deg)',\r\n        open : false,\r\n        gradosButtonMenuTop: 'rotateZ(0deg)',\r\n        gradosButtonMenuBottom: 'rotateZ(0deg)',\r\n        positionButtonMenuTop: top        \r\n        }        \r\n      }, ()=> this.menuButtonTop.current.style.top = this.state.Menu.positionButtonMenuTop)      \r\n  }\r\n\r\n  \r\n  \r\n}\r\n \r\n \r\n","C:\\portafolio\\src\\vars.js",[],"C:\\portafolio\\src\\pages\\home\\cover\\cover.js",["30"],{"ruleId":"31","severity":1,"message":"32","line":1,"column":26,"nodeType":"33","messageId":"34","endLine":1,"endColumn":35},{"ruleId":"31","severity":1,"message":"35","line":77,"column":27,"nodeType":"33","messageId":"34","endLine":77,"endColumn":33},{"ruleId":"36","severity":1,"message":"37","line":78,"column":47,"nodeType":"38","endLine":78,"endColumn":50},{"ruleId":"39","severity":1,"message":"40","line":10,"column":5,"nodeType":"41","messageId":"42","endLine":13,"endColumn":6},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'tagaux' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor"]